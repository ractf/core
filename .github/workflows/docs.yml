name: Publish Documentation

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - uses: actions/setup-node@v2-beta
      with:
        node-version: '14'

    - name: Cache Python modules
      uses: actions/cache@v1
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.pip
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-
        restore-keys: |
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install Poetry
      run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
      env:
        POETRY_PREVIEW: 1

    - name: Disable Virtualenvs
      run: $HOME/.poetry/bin/poetry config virtualenvs.create false

    - name: Install Python Dependencies
      run: $HOME/.poetry/bin/poetry install --no-interaction --no-ansi
      env:
        PIP_CACHE_DIR: ~/.pip

    - name: Generate OpenAPI schema
      run: ./src/manage.py getschema | tee openapi-schema.yml
      env:
        DJANGO_SETTINGS_MODULE: 'backend.settings.test'

    - name: Publish API documentation to GitHub
      uses: actions/upload-artifact@v2
      with:
        name: openapi-schema.yml
        path: openapi-schema.yml

    - name: Trigger docs-site build
      run: |
        curl -X POST ${{ secrets.WEBHOOK_URL }} \
        -H 'Authorization: token ${{ secrets.WEBHOOK_TOKEN }}' \
        --data '{"event_type": "deploy_docs_site"}'
